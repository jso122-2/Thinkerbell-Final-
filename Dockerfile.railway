# Railway Dockerfile for Thinkerbell
# Uses static HTML files instead of Vite build

FROM python:3.11-slim

# Set environment variables for Railway
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PORT=8000 \
    HOST=0.0.0.0 \
    DEBIAN_FRONTEND=noninteractive \
    THINKERBELL_MODEL_DIR=models/optimum-model

# Install system dependencies (minimal) in single layer
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && apt-get autoremove -y

# Set working directory
WORKDIR /app

# Copy minimal requirements for Railway size limit
COPY requirements_minimal.txt ./

# Install minimal Python dependencies (under 5.5GB limit)
RUN pip install --no-cache-dir --timeout 600 --retries 2 \
    --extra-index-url https://download.pytorch.org/whl/cpu \
    -r requirements_minimal.txt && \
    apt-get autoremove -y && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /tmp/* && \
    rm -rf /var/tmp/*

# Copy production server and dependencies
COPY production_server.py ./
COPY full_thinkerbell_server.py ./
COPY lightweight_server.py ./
COPY config/ ./config/
COPY style_profiles/ ./style_profiles/
COPY static/ ./static/

# Copy model files to BOTH expected locations
COPY models/optimum-model/ ./models/optimum-model/
RUN mkdir -p app/model && cp -r models/optimum-model app/model/ && ls -la app/model/optimum-model/

# Create all necessary directories in single layer
RUN mkdir -p logs data temp

# Expose port (Railway will override this)
EXPOSE 8000

# More generous health check for Railway debugging
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=5 \
    CMD curl -f http://localhost:${PORT:-8000}/health || curl -f http://127.0.0.1:${PORT:-8000}/health || exit 1

# Run working server that handles missing static files
CMD ["python", "lightweight_server.py"]
